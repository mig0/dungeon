import pygame
from config import *

MAP_SIZE_X = PLAY_SIZE_X + 2
MAP_SIZE_Y = PLAY_SIZE_Y + 2

MAP_W = CELL_W * MAP_SIZE_X
MAP_H = CELL_H * MAP_SIZE_Y
MAP_POS_X1 = 0
MAP_POS_Y1 = 0

WIDTH = CELL_W * MAP_SIZE_X
HEIGHT = CELL_H * (MAP_SIZE_Y + 1)
POS_CENTER_X = WIDTH / 2
POS_CENTER_Y = HEIGHT / 2
POS_STATUS_Y = HEIGHT - CELL_H / 2

ARROW_KEY_R = pygame.K_RIGHT
ARROW_KEY_L = pygame.K_LEFT
ARROW_KEY_D = pygame.K_DOWN
ARROW_KEY_U = pygame.K_UP

CELL_WALL = '‚ñì'
CELL_FLOOR  = '¬∑'
CELL_CRACK  = '‚¶Å'
CELL_BONES  = '‚Ä¢'
CELL_ROCKS  = '‚ó¶'
CELL_PLATE  = '_'
CELL_GATE0  = '‚¨Æ'
CELL_GATE1  = '‚¨Ø'
CELL_START  = '‚èµ'
CELL_FINISH = '‚çü'
CELL_PORTAL = 'ùüò'
CELL_SAND   = '‚ßò'
CELL_LOCK1  = 'ùüô'
CELL_LOCK2  = 'ùüö'
CELL_VOID   = ''

CELL_INTERNAL1 = '1'
CELL_INNER_WALL = '‚ñí'

CELL_WALLS = (CELL_WALL, CELL_INNER_WALL)
CELL_FLOOR_TYPES_RANDGEN = (CELL_CRACK, CELL_BONES, CELL_ROCKS)
CELL_FLOOR_TYPES_FREQUENT = (*CELL_FLOOR_TYPES_RANDGEN, *((CELL_FLOOR,) * EMPTY_FLOOR_FREQUENCY))
CELL_FLOOR_TYPES = (*CELL_FLOOR_TYPES_RANDGEN, CELL_FLOOR)
CELL_FLOOR_EXTENSIONS = (*CELL_FLOOR_TYPES_RANDGEN, CELL_PLATE, CELL_START, CELL_FINISH, CELL_PORTAL, CELL_GATE0, CELL_GATE1, CELL_LOCK1, CELL_LOCK2)
CELL_ENEMY_PLACE_OBSTACLES = (*CELL_WALLS, CELL_PORTAL, CELL_START, CELL_FINISH, CELL_GATE0, CELL_GATE1, CELL_SAND, CELL_LOCK1, CELL_LOCK2, CELL_VOID)
CELL_CHAR_PLACE_OBSTACLES = (*CELL_WALLS, CELL_PLATE, CELL_PORTAL, CELL_GATE0, CELL_GATE1, CELL_SAND, CELL_LOCK1, CELL_LOCK2, CELL_VOID)
CELL_CHAR_MOVE_OBSTACLES  = (*CELL_WALLS, CELL_GATE0, CELL_LOCK1, CELL_LOCK2, CELL_VOID)

ACTOR_CHARS = {
	'heart':  '‚ô•',
	'sword':  '‚∏∏',
	'key1':   '¬π',
	'key2':   '¬≤',
	'enemy':  'üï±',
	'barrel': '‚òê',
	'char':   '‚òª',
}

LIFT_A = ''
LIFT_H = 'h'
LIFT_V = 'v'
LIFT_L = 'l'
LIFT_R = 'r'
LIFT_U = 'u'
LIFT_D = 'd'

LIFT_CHARS = {
	LIFT_A: '‚ú•',
	LIFT_H: '‚Üî',
	LIFT_V: '‚Üï',
	LIFT_L: '‚Üê',
	LIFT_R: '‚Üí',
	LIFT_U: '‚Üë',
	LIFT_D: '‚Üì',
}

LIFT_TYPE_DIRECTIONS = {
	LIFT_A:  [(-1, 0), (+1, 0), (0, -1), (0, +1)],
	LIFT_H: [(-1, 0), (+1, 0)],
	LIFT_V: [(0, -1), (0, +1)],
	LIFT_L: [(-1, 0)],
	LIFT_R: [(+1, 0)],
	LIFT_U: [(0, -1)],
	LIFT_D: [(0, +1)],
}
LIFT_TYPES = *LIFT_TYPE_DIRECTIONS,

PLAY_X1 = 1
PLAY_X2 = PLAY_X1 + PLAY_SIZE_X - 1
PLAY_Y1 = 1
PLAY_Y2 = PLAY_Y1 + PLAY_SIZE_Y - 1

PLAY_X_RANGE = range(PLAY_X1, PLAY_X2 + 1)
PLAY_Y_RANGE = range(PLAY_Y1, PLAY_Y2 + 1)

MAP_X_RANGE = range(0, MAP_SIZE_X)
MAP_Y_RANGE = range(0, MAP_SIZE_Y)

PLAY_4_SIZE_X = PLAY_SIZE_X - 1
PLAY_4_SIZE_Y = PLAY_SIZE_Y - 1

ROOM_4_SIZE_X = [
	PLAY_4_SIZE_X // 2,
	PLAY_4_SIZE_X - PLAY_4_SIZE_X // 2,
	PLAY_4_SIZE_X // 2,
	PLAY_4_SIZE_X - PLAY_4_SIZE_X // 2,
]
ROOM_4_SIZE_Y = [
	PLAY_4_SIZE_Y // 2,
	PLAY_4_SIZE_Y // 2,
	PLAY_4_SIZE_Y - PLAY_4_SIZE_Y // 2,
	PLAY_4_SIZE_Y - PLAY_4_SIZE_Y // 2,
]

ROOM_4_X1 = [
	PLAY_X1,
	PLAY_X1 + ROOM_4_SIZE_X[0] + 1,
	PLAY_X1,
	PLAY_X1 + ROOM_4_SIZE_X[0] + 1,
]
ROOM_4_X2 = [
	PLAY_X1 + ROOM_4_SIZE_X[0] - 1,
	PLAY_X2,
	PLAY_X1 + ROOM_4_SIZE_X[0] - 1,
	PLAY_X2,
]
ROOM_4_Y1 = [
	PLAY_Y1,
	PLAY_Y1,
	PLAY_Y1 + ROOM_4_SIZE_Y[0] + 1,
	PLAY_Y1 + ROOM_4_SIZE_Y[0] + 1,
]
ROOM_4_Y2 = [
	PLAY_Y1 + ROOM_4_SIZE_Y[0] - 1,
	PLAY_Y1 + ROOM_4_SIZE_Y[0] - 1,
	PLAY_Y2,
	PLAY_Y2,
]

ROOM_4_X_RANGE = [
	range(ROOM_4_X1[0], ROOM_4_X2[0] + 1),
	range(ROOM_4_X1[1], ROOM_4_X2[1] + 1),
	range(ROOM_4_X1[2], ROOM_4_X2[2] + 1),
	range(ROOM_4_X1[3], ROOM_4_X2[3] + 1),
]
ROOM_4_Y_RANGE = [
	range(ROOM_4_Y1[0], ROOM_4_Y2[0] + 1),
	range(ROOM_4_Y1[1], ROOM_4_Y2[1] + 1),
	range(ROOM_4_Y1[2], ROOM_4_Y2[2] + 1),
	range(ROOM_4_Y1[3], ROOM_4_Y2[3] + 1),
]

ROOM_4_BORDERS_X = [ROOM_4_X2[0] + 1]
ROOM_4_BORDERS_Y = [ROOM_4_Y2[0] + 1]

PLAY_9_SIZE_X = PLAY_SIZE_X - 2
PLAY_9_SIZE_Y = PLAY_SIZE_Y - 2

ROOM_9_SIZE_X = [
	PLAY_9_SIZE_X // 3,
	PLAY_9_SIZE_X - PLAY_9_SIZE_X // 3 * 2,
	PLAY_9_SIZE_X // 3,
	PLAY_9_SIZE_X // 3,
	PLAY_9_SIZE_X - PLAY_9_SIZE_X // 3 * 2,
	PLAY_9_SIZE_X // 3,
	PLAY_9_SIZE_X // 3,
	PLAY_9_SIZE_X - PLAY_9_SIZE_X // 3 * 2,
	PLAY_9_SIZE_X // 3,
]
ROOM_9_SIZE_Y = [
	PLAY_9_SIZE_Y // 3,
	PLAY_9_SIZE_Y - PLAY_9_SIZE_Y // 3 * 2,
	PLAY_9_SIZE_Y // 3,
	PLAY_9_SIZE_Y // 3,
	PLAY_9_SIZE_Y - PLAY_9_SIZE_Y // 3 * 2,
	PLAY_9_SIZE_Y // 3,
	PLAY_9_SIZE_Y // 3,
	PLAY_9_SIZE_Y - PLAY_9_SIZE_Y // 3 * 2,
	PLAY_9_SIZE_Y // 3,
]

ROOM_9_X1 = [
	PLAY_X1,
	PLAY_X1 + ROOM_9_SIZE_X[0] + 1,
	PLAY_X1 + ROOM_9_SIZE_X[0] + 1 + ROOM_9_SIZE_X[1] + 1,
	PLAY_X1,
	PLAY_X1 + ROOM_9_SIZE_X[0] + 1,
	PLAY_X1 + ROOM_9_SIZE_X[0] + 1 + ROOM_9_SIZE_X[1] + 1,
	PLAY_X1,
	PLAY_X1 + ROOM_9_SIZE_X[0] + 1,
	PLAY_X1 + ROOM_9_SIZE_X[0] + 1 + ROOM_9_SIZE_X[1] + 1,
]
ROOM_9_X2 = [
	ROOM_9_X1[0] + ROOM_9_SIZE_X[0] - 1,
	ROOM_9_X1[1] + ROOM_9_SIZE_X[1] - 1,
	PLAY_X2,
	ROOM_9_X1[0] + ROOM_9_SIZE_X[0] - 1,
	ROOM_9_X1[1] + ROOM_9_SIZE_X[1] - 1,
	PLAY_X2,
	ROOM_9_X1[0] + ROOM_9_SIZE_X[0] - 1,
	ROOM_9_X1[1] + ROOM_9_SIZE_X[1] - 1,
	PLAY_X2,
]
ROOM_9_Y1 = [
	PLAY_Y1,
	PLAY_Y1,
	PLAY_Y1,
	PLAY_Y1 + ROOM_9_SIZE_Y[0] + 1,
	PLAY_Y1 + ROOM_9_SIZE_Y[0] + 1,
	PLAY_Y1 + ROOM_9_SIZE_Y[0] + 1,
	PLAY_Y1 + ROOM_9_SIZE_Y[0] + 1 + ROOM_9_SIZE_Y[1] + 1,
	PLAY_Y1 + ROOM_9_SIZE_Y[0] + 1 + ROOM_9_SIZE_Y[1] + 1,
	PLAY_Y1 + ROOM_9_SIZE_Y[0] + 1 + ROOM_9_SIZE_Y[1] + 1,
]
ROOM_9_Y2 = [
	ROOM_9_Y1[0] + ROOM_9_SIZE_Y[0] - 1,
	ROOM_9_Y1[0] + ROOM_9_SIZE_Y[0] - 1,
	ROOM_9_Y1[0] + ROOM_9_SIZE_Y[0] - 1,
	ROOM_9_Y1[4] + ROOM_9_SIZE_Y[4] - 1,
	ROOM_9_Y1[4] + ROOM_9_SIZE_Y[4] - 1,
	ROOM_9_Y1[4] + ROOM_9_SIZE_Y[4] - 1,
	PLAY_Y2,
	PLAY_Y2,
	PLAY_Y2,
]

ROOM_9_X_RANGE = [
	range(ROOM_9_X1[0], ROOM_9_X2[0] + 1),
	range(ROOM_9_X1[1], ROOM_9_X2[1] + 1),
	range(ROOM_9_X1[2], ROOM_9_X2[2] + 1),
	range(ROOM_9_X1[3], ROOM_9_X2[3] + 1),
	range(ROOM_9_X1[4], ROOM_9_X2[4] + 1),
	range(ROOM_9_X1[5], ROOM_9_X2[5] + 1),
	range(ROOM_9_X1[6], ROOM_9_X2[6] + 1),
	range(ROOM_9_X1[7], ROOM_9_X2[7] + 1),
	range(ROOM_9_X1[8], ROOM_9_X2[8] + 1),
]
ROOM_9_Y_RANGE = [
	range(ROOM_9_Y1[0], ROOM_9_Y2[0] + 1),
	range(ROOM_9_Y1[1], ROOM_9_Y2[1] + 1),
	range(ROOM_9_Y1[2], ROOM_9_Y2[2] + 1),
	range(ROOM_9_Y1[3], ROOM_9_Y2[3] + 1),
	range(ROOM_9_Y1[4], ROOM_9_Y2[4] + 1),
	range(ROOM_9_Y1[5], ROOM_9_Y2[5] + 1),
	range(ROOM_9_Y1[6], ROOM_9_Y2[6] + 1),
	range(ROOM_9_Y1[7], ROOM_9_Y2[7] + 1),
	range(ROOM_9_Y1[8], ROOM_9_Y2[8] + 1),
]

ROOM_9_BORDERS_X = [ROOM_9_X2[0] + 1, ROOM_9_X2[1] + 1]
ROOM_9_BORDERS_Y = [ROOM_9_Y2[0] + 1, ROOM_9_Y2[3] + 1]

MAX_COLOR_PUZZLE_VALUES = 6

COLOR_PUZZLE_VALUE_OUTSIDE = -1
COLOR_PUZZLE_VALUE_PLATE   = -2
COLOR_PUZZLE_VALUE_RED     = 0
COLOR_PUZZLE_VALUE_GREEN   = 1
COLOR_PUZZLE_VALUE_BLUE    = 2
COLOR_PUZZLE_VALUE_YELLOW  = 3
COLOR_PUZZLE_VALUE_CYAN    = 4
COLOR_PUZZLE_VALUE_PURPLE  = 5

IMAGES_DIR_PREFIX = 'images/'
DEFAULT_IMAGE_PREFIX = 'default/'
